<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.member">
<sql id="searchWhere">
		<choose>
			<when test="searchKeyword !=null and searchKeyword !=''" >
				where ${searchCondition} like '%'|| #{searchKeyword} ||'%'
			</when>
			<when test="searchStartDate !=null and searchStartDate !=''
			 and searchEndDate !=null and searchEndDate !=''" >
				where M_JOINDATE between to_date(#{searchStartDate},'YYYY-MM-DD')
				and to_date(#{searchEndDate},'YYYY-MM-DD')+1
			</when>
			<when test="searchKeyword !=null and searchKeyword !=''
			 and searchStartDate !=null and searchStartDate !=''
		 	and searchEndDate !=null and searchEndDate !=''" >
				where ${searchCondition} like '%'|| #{searchKeyword} ||'%'
			and
			 M_JOINDATE between to_date(#{searchStartDate},'YYYY-MM-DD')
			and to_date(#{searchEndDate},'YYYY-MM-DD')+1
			</when>
			<otherwise>
			
			</otherwise>

		</choose>

	</sql>

	<insert id="memberInsert" parameterType="MemberVO">
		<selectKey keyProperty="mNo" resultType="int" order="BEFORE">
			select member_seq.nextval from dual
		</selectKey>
			 <choose>
			<when test="kNo2==0 and kNo3==0">
			insert into member(m_userid,mg_no2,m_no,m_pwd,m_name,m_email1,m_email2,m_address,m_addressdetail,
								k_no1,,m_tel1,m_tel2,m_tel3,q_questionno,m_questionanswer)
			values(#{mUserid},#{mgNo2},#{mNo},#{mPwd},#{mName},#{mEmail1},#{mEmail2},#{mAddress},#{mAddressdetail},
								#{kNo1},#{mTel1},#{mTel2},#{mTel3},#{qQuestionno},#{mQuestionanswer})
			</when>
			<when test="kNo2==0 and kNo3!=0">
			insert into member(m_userid,mg_no2,m_no,m_pwd,m_name,m_email1,m_email2,m_address,m_addressdetail,
								k_no1,k_no3,m_tel1,m_tel2,m_tel3,q_questionno,m_questionanswer)
			values(#{mUserid},#{mgNo2},#{mNo},#{mPwd},#{mName},#{mEmail1},#{mEmail2},#{mAddress},#{mAddressdetail},
								#{kNo1},#{kNo3},#{mTel1},#{mTel2},#{mTel3},#{qQuestionno},#{mQuestionanswer})
			</when>
			<when test="kNo2!=0 and kNo3==0">
			insert into member(m_userid,mg_no2,m_no,m_pwd,m_name,m_email1,m_email2,m_address,m_addressdetail,
								k_no1,k_no2,m_tel1,m_tel2,m_tel3,q_questionno,m_questionanswer)
			values(#{mUserid},#{mgNo2},#{mNo},#{mPwd},#{mName},#{mEmail1},#{mEmail2},#{mAddress},#{mAddressdetail},
								#{kNo1},#{kNo2},#{mTel1},#{mTel2},#{mTel3},#{qQuestionno},#{mQuestionanswer})
			</when>
			
			<when test="kNo2!=0 and kNo3!=0">
			insert into member(m_userid,mg_no2,m_no,m_pwd,m_name,m_email1,m_email2,m_address,m_addressdetail,
								k_no1,k_no2,k_no3,m_tel1,m_tel2,m_tel3,q_questionno,m_questionanswer)
			values(#{mUserid},#{mgNo2},#{mNo},#{mPwd},#{mName},#{mEmail1},#{mEmail2},#{mAddress},#{mAddressdetail},
								#{kNo1},#{kNo2},#{kNo3},#{mTel1},#{mTel2},#{mTel3},#{qQuestionno},#{mQuestionanswer})
			</when>
			<otherwise>
			
			</otherwise>

		</choose>

			
	</insert>
	
	<select id="duplicateUserid" parameterType="string" 
		resultType="int">
		select count(*) from member
		where m_userid=#{mUserid}
	</select>
	
	<select id="selectPwdByUserid" parameterType="string" 
		resultType="string">
		select m_pwd from member where m_userid=#{mUserid} 
		and m_leavedate is null
	</select>
	
	<select id="selectByUserid" parameterType="string" 
		resultType="MemberVO">
		select * from member where m_userid=#{mUserid}
	</select>
	
	<select id="MemberselectByAll" resultType="MemberVO">
		select *from member order by m_no
	</select>
	
	<select id="MemberSelectPG" parameterType="SearchVO" resultType="hashmap">
		select m_USERID,M_NO,M_NAME,M_JOINDATE,K_1,K_2,K_3
		from
		(
		    select rownum as RNUM ,LIST.*
		    from
		    (
		        select * from OPERATORMEMBERVIEW 
		        <include refid="searchWhere"></include>
		        order by m_no desc
		    )LIST
		)
		<![CDATA[
		where RNUM>#{firstRecordIndex} 
		and RNUM <=#{firstRecordIndex} + #{recordCountPerPage}
		]]>
	</select>
	
	<select id="MemberSeletCount" parameterType="SearchVO" resultType="int">
		select count(*) from OPERATORMEMBERVIEW where 
		<include refid="searchWhere"></include>
	</select>
	
	
	<select id="ExcelMemberView" parameterType="SearchVO" resultType="hashmap">
		select *from EXCELMEMBERVIEW 
		<include refid="searchWhere"></include>
		order by m_no
	</select>
	
	<select id="OperatorMemberView" resultType="hashmap">
		select *from operatorMemberView order by m_no
	</select>
	
	

</mapper>
